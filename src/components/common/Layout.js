import React from "react"
import PropTypes from "prop-types"
import { Helmet } from "react-helmet"
import { Link, StaticQuery, graphql } from "gatsby"
import Img from "gatsby-image"

import { Navigation } from "."
import config from "../../utils/siteConfig"

import IndexNavbar from "../Navbars/IndexNavbar"
import { motion } from "framer-motion"

import Footer from "../../components/Footers/Footer"

// Styles
import "../../styles/app.css"

/**
 * Main layout component
 *
 * The Layout component wraps around each page and template.
 * It also provides the header, footer as well as the main
 * styles, and meta data for each page.
 *
 */
const DefaultLayout = ({ data, children, bodyClass, isHome }) => {
    const site = data.allGhostSettings.edges[0].node
    const twitterUrl = site.twitter
        ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}`
        : null
    const facebookUrl = site.facebook
        ? `https://www.facebook.com/${site.facebook.replace(/^\//, ``)}`
        : null

    const svgVariants = {
        hidden: { fill: `rgba(255, 255, 255, 0)` },
        visible: {
            fill: `rgba(255, 255, 255, 0.8)`,
            rotate: 0,
            transition: { delay: 0, duration: 3, ease: `easeInOut` },
        },
    }

    const pathVariants = {
        hidden: {
            pathLength: 0,
        },
        visible: {
            pathLength: 1,
            transition: {
                duration: 3,
                ease: `easeInOut`,
            },
        },
    }

    return (
        <>
            <Helmet>
                <html lang={site.lang} />
                <style type="text/css">{`${site.codeinjection_styles}`}</style>
                <body className={bodyClass} />
            </Helmet>

            <div className="viewport">
                <div className="viewport-top">
                    {/* The main header section on top of the screen */}
                    <IndexNavbar
                        showProgressBar={isHome ? false : true}
                        style={{ color: `000000` }}
                    />
                    <header
                        className="site-head"
                        style={{
                            ...(site.cover_image && {
                                background: `linear-gradient(rgba(0,0,0, 0.75), rgba(255,255,255,0.05)), url(${site.cover_image}) no-repeat`,
                                height: `80vh`,
                                overflow: `hidden`,
                                display: `flex`,
                                alignItems: `center`,
                                justifyContent: `center`,
                            }),
                        }}
                    >
                        <motion.svg
                            variants={isHome ? svgVariants : null}
                            initial="hidden"
                            animate="visible"
                            style={{
                                overflow: `visible`,
                                stroke: `#fff`,
                                strokeWidth: 2,
                                strokeLinejoin: `round`,
                                strokeLinecap: `round`,
                                position: `relative`,
                                top: 100,
                                // height: `200px`,
                            }}
                            fill="rgba(255,255,255,0.8)"
                            width="150mm"
                            height="193.5mm"
                            version="1.1"
                            viewBox="0 0 210 297"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <motion.path
                                d="m121.33 166.31c-1.5823-0.40646-3.7376-1.6276-4.5937-2.6026-0.46819-0.53323-1.1609-1.6298-1.5394-2.4368-0.61702-1.3155-0.68793-1.782-0.68542-4.51 2e-3 -1.716 0.16335-3.6772 0.371-4.4979 1.1341-4.4823 3.5362-8.3068 8.0756-12.857 4.6719-4.6835 9.4208-8.052 20.478-14.526 2.5285-1.4803 3.6032-2.2599 3.7952-2.753 0.14728-0.37836 0.61513-1.6224 1.0397-2.7646l0.77188-2.0766-1.5778 1.6025c-3.2809 3.3322-6.5084 4.7926-11.065 5.0065-2.176 0.10215-2.9562 0.0353-3.9304-0.33674-4.4558-1.7017-5.6764-6.8142-3.285-13.761 0.40076-1.1642 0.80883-2.3024 0.90682-2.5295 0.15544-0.3602-0.15877-0.34333-2.4639 0.13229l-2.6421 0.54514-1.4019 2.3164c-2.1143 3.4936-3.5031 5.274-5.9357 7.6094-5.0453 4.8437-10.613 7.2092-14.967 6.3589-0.91611-0.17889-2.2269-0.56544-2.9128-0.85899-1.2758-0.54598-3.4116-2.5798-3.9499-3.7613l-0.30036-0.65922-2.5429 2.2709c-3.8708 3.4568-7.4156 5.706-10.461 6.6376-1.996 0.61058-5.2432 0.53106-7.0698-0.17313-2.6528-1.0227-4.925-3.5448-5.8923-6.5402-0.99598-3.0844-0.951-8.981 0.11026-14.456 0.28567-1.4736 0.49185-2.7053 0.45819-2.737-0.0337-0.0317-1.8302 0.67548-3.9923 1.5715l-3.9311 1.6291-0.85678 2.3996c-1.8103 5.0702-3.6816 8.2354-6.4793 10.96-2.9937 2.9151-5.9731 4.3597-9.6292 4.6688-2.2066 0.18652-3.4681-0.1231-4.6898-1.1511-1.1325-0.95295-1.5713-1.9567-1.5713-3.5945 0-3.9176 4.356-8.3759 12.113-12.397l2.7204-1.4104 0.67114-2.1196c1.0405-3.2861 1.3393-5.8274 0.85585-7.279-1.0531-3.1621-4.3663-1.6526-10.913 4.9715-3.7986 3.8437-4.237 4.4722-5.6924 8.1584-2.2655 5.7382-2.9475 9.917-1.847 11.316 0.30497 0.3877 0.48969 0.87378 0.41049 1.0802-0.24554 0.63986-1.7945 1.2607-3.4666 1.3895-1.3668 0.10528-1.7341 0.0321-2.5255-0.50311-1.522-1.0294-1.9152-2.0896-1.7345-4.6777 0.4071-5.8319 3.3986-14.661 8.8015-25.977 2.8475-5.9638 8.7635-16.84 9.633-17.709 1.0058-1.0058 2.18-1.32 4.258-1.1396 2.637 0.22899 4.442 1.4084 4.442 2.9023 0 0.32788-0.75004 1.7599-1.6668 3.1823-3.6002 5.5861-8.3516 13.559-9.9666 16.725l-0.55351 1.085 2.4341-1.848c4.4566-3.3835 8.0084-4.8167 10.574-4.2665 2.5011 0.53639 3.8576 1.6249 4.9694 3.9876 0.59485 1.2641 0.68524 1.8076 0.68829 4.1384l3e-3 2.6832 1.0583-0.41649c0.58208-0.22907 2.4234-0.97425 4.0917-1.656l3.0334-1.2395 1.2112-3.5407c2.7201-7.9514 5.4122-13.691 9.2504-19.721 5.7034-8.9608 12.717-14.484 19.155-15.085 7.2261-0.67478 9.8858 4.9682 6.7542 14.33-3.3031 9.8746-11.191 20.645-19.467 26.581-2.5119 1.8017-6.4878 3.8299-8.0781 4.1209-0.54052 0.0989-1.0876 0.31621-1.2157 0.48289-0.12812 0.16668-0.42627 1.2556-0.66256 2.4197-1.549 7.632-1.221 12.383 0.99554 14.42 0.60454 0.55544 0.9642 0.65697 2.2439 0.63347 2.8629-0.0526 5.5638-1.6921 10.124-6.1456l2.83-2.7635-0.01476-2.0137c-0.04142-5.6461 5.0135-14.346 10.673-18.37 3.0665-2.1802 7.6409-3.5254 11.209-3.2964 2.14 0.13734 3.6434 0.81811 3.7735 1.7088 0.0647 0.44292-0.1013 0.58388-0.85401 0.72509-2.4173 0.45349-7.8027 5.1134-11.338 9.8108-2.0647 2.7432-4.4709 7.4236-5.1009 9.9219-1.4067 5.5782 1.6072 7.3293 6.4436 3.7439 2.1705-1.6091 5.8816-5.4231 8.092-8.3164l1.556-2.0368-1.063-1.0316c-1.444-1.4014-2.1813-3.4322-2.1813-6.0083 0-2.2169 0.29107-2.9776 1.6311-4.263 1.2073-1.1581 2.7183-1.7429 4.4759-1.7322 4.0767 0.02461 6.0467 3.2973 4.9797 8.2725-0.15973 0.74481-0.22346 1.4212-0.14162 1.503 0.0819 0.0818 1.3072-0.11887 2.7229-0.44602 2.8289-0.6537 2.8282-0.65316 5.3134-3.7953 2.3362-2.9539 5.8818-5.4137 9.6757-6.7128 2.2756-0.77923 6.4527-1.1148 7.906-0.63521 1.1938 0.394 2.6863 1.8824 3.4319 3.4227 0.56382 1.1647 0.58802 1.1809 0.83187 0.55559 0.13814-0.3542 0.59664-1.3801 1.0189-2.2797 0.97565-2.0786 1.6434-2.3626 4.5918-1.9525 2.1401 0.29766 2.8154 0.5515 3.7632 1.4146 1.1289 1.028 1.0299 1.8507-0.72079 5.9881-1.706 4.0318-6.42 16.447-6.293 16.574 0.12734 0.12734 8.4736-5.4907 10.41-7.0074 4.5492-3.5627 7.308-6.4437 9.719-10.15 1.1538-1.7735 1.9699-2.2762 2.962-1.8242 2.6006 1.1849-2.9111 9.0403-10.47 14.922-2.5058 1.9499-8.4038 5.7221-12.128 7.7568-2.2114 1.2082-2.4404 1.4096-2.8475 2.5044-6.1018 16.411-11.376 27.432-16.359 34.185-3.3373 4.5228-7.552 8.0609-11.22 9.4189-1.885 0.69784-5.9936 1.0243-7.6231 0.6057zm4.5173-4.6215c4.1057-1.7154 10.583-12.965 18.186-31.585 0.54964-1.3461 0.95093-2.4474 0.89177-2.4474-0.22252 0-6.9628 4.1104-9.2495 5.6406-4.127 2.7616-6.5325 4.6946-9.2604 7.441-5.2708 5.3066-7.6042 10.118-7.6517 15.776-0.0191 2.2832 0.0437 2.6275 0.64023 3.5072 0.3638 0.53651 1.1377 1.2128 1.7198 1.5029 1.2482 0.62209 3.4453 0.6984 4.7241 0.16409zm-80.525-40.78c0.42318-0.21884 1.3596-1.1273 2.081-2.0189 1.4298-1.7671 4.1677-6.502 3.9092-6.7606-0.21324-0.21324-4.1899 2.0996-5.8598 3.408-2.3925 1.8746-3.4866 3.9164-2.793 5.2123 0.3599 0.67248 1.5343 0.74267 2.6627 0.15915zm97.629-2.0329c1.261-0.60634 2.3582-1.4689 4.1127-3.233 3.413-3.4317 4.6224-5.3597 6.2068-9.8946 1.752-5.0145 1.7264-6.8159-0.12094-8.5187-1.0385-0.95724-3.6852-0.9298-5.5683 0.0577-1.4421 0.75627-3.8293 3.0871-5.0896 4.9694-2.014 3.008-4.9946 10.104-5.3753 12.797-0.28313 2.0031 0.10616 3.9808 0.89568 4.5503 0.81559 0.58835 2.8131 0.29372 4.9389-0.72849zm-20.367-17.425c0.91212-1.8069 0.98808-2.6984 0.28946-3.397-1.138-1.138-2.9376 0.18149-3.1415 2.3032-0.1404 1.4611 0.21814 2.3519 1.0774 2.6769 0.77833 0.29435 0.86657 0.21564 1.7746-1.5831zm-40.991 0.79537c3.1405-1.2379 7.738-5.0196 11.091-9.1235 3.3929-4.1522 7.6599-11.525 9.779-16.898 1.0972-2.7815 2.1227-6.3697 2.1227-7.4268 0-1.8342-1.7929-2.2816-4.3859-1.0945-4.7525 2.1758-11.969 12.951-16.808 25.096-1.1335 2.8451-3.4126 9.3597-3.4126 9.7545 0 0.31701 0.05661 0.30622 1.6131-0.30731z"
                                strokeWidth=".26458"
                                animate="visible"
                                variants={isHome ? pathVariants : null}
                            />
                        </motion.svg>
                    </header>

                    <main className="site-main">
                        {/* All the main content gets inserted here, index.js, post.js */}
                        {children}
                    </main>
                </div>

                <div className="viewport-bottom">
                    {/* The footer at the very bottom of the screen */}
                    <Footer isBlog={true} />
                </div>
            </div>
        </>
    )
}

DefaultLayout.propTypes = {
    // children: PropTypes.node.isRequired,
    bodyClass: PropTypes.string,
    isHome: PropTypes.bool,
    data: PropTypes.shape({
        file: PropTypes.object,
        allGhostSettings: PropTypes.object.isRequired,
    }).isRequired,
}

const DefaultLayoutSettingsQuery = props => (
    <StaticQuery
        query={graphql`
            query GhostSettings {
                allGhostSettings {
                    edges {
                        node {
                            ...GhostSettingsFields
                        }
                    }
                }
                file(relativePath: { eq: "ghost-icon.png" }) {
                    childImageSharp {
                        fixed(width: 30, height: 30) {
                            ...GatsbyImageSharpFixed
                        }
                    }
                }
            }
        `}
        render={data => <DefaultLayout data={data} {...props} />}
    />
)

export default DefaultLayoutSettingsQuery
